File: performance.test
Type: alloc_space
Time: Aug 4, 2025 at 8:12am (+07)
Showing nodes accounting for 35.72GB, 98.35% of 36.32GB total
Dropped 53 nodes (cum <= 0.18GB)
      flat  flat%   sum%        cum   cum%
   23.13GB 63.68% 63.68%    23.13GB 63.68%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkMemoryAllocation.func1
    4.05GB 11.15% 74.83%     4.05GB 11.15%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkSliceOperations.func1
    3.28GB  9.04% 83.86%     3.28GB  9.04%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkMemoryUsage.func1
    1.77GB  4.87% 88.73%     1.77GB  4.87%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkMapOperations.func2
    1.48GB  4.06% 92.80%     1.51GB  4.16%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkStringOperations.func1
    0.54GB  1.50% 94.30%     0.58GB  1.59%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkMapOperations.func1
    0.46GB  1.26% 95.56%     0.46GB  1.26%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkCryptoOperations.func1
    0.40GB  1.11% 96.67%     0.45GB  1.25%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkMapOperations.func3
    0.24GB  0.65% 97.32%     0.24GB  0.65%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkGoroutineCreation.func1
    0.19GB  0.51% 97.83%     0.19GB  0.52%  fmt.Sprintf
    0.10GB  0.28% 98.11%     0.23GB  0.63%  encoding/json.Marshal
    0.05GB  0.14% 98.25%     0.20GB  0.54%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkJSONUnmarshaling
    0.04GB 0.099% 98.35%     0.26GB  0.73%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkJSONMarshaling
         0     0% 98.35%     0.29GB   0.8%  github.com/elotusteam/microservice-project/tests/performance.BenchmarkStringOperations.func2
         0     0% 98.35%    36.32GB   100%  testing.(*B).launch
         0     0% 98.35%    36.32GB   100%  testing.(*B).runN
